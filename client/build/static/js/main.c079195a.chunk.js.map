{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/issues/new.js","components/issues/edit.js","components/issues/list.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Landing","style","paddingTop","className","src","alt","width","to","backgroundColor","borderRadius","letterSpacing","marginTop","Component","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","this","push","nextProps","paddingLeft","noValidate","margin","padding","placeholder","error","classnames","invalid","htmlFor","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","CreateIssue","onChangeIssueTitle","bind","onChangeIssueDescription","onChangeIssueType","onChangeIssuePriority","onChangeIssueStatus","onChangeIssueCreatedby","onChangeIssueUsersinvolved","onChangeIssueCreatedon","onChangeIssueDeadline","onChangeIssueComments","onChangeIssueCompleted","issue_title","issue_description","issue_type","issue_priority","issue_status","issue_createdby","issue_usersinvolved","issue_createdon","issue_deadline","issue_comments","issue_completed","console","log","issue","newIssue","alert","defaultValue","Date","now","EditIssue","get","match","params","obj","align","checked","Issue","_id","IssuesList","issues","map","currentIssue","i","key","issueList","Dashboard","onLogoutClick","onClick","split","path","exact","height","jwtToken","currentTime","exp","location","href","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c079195a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: \"10%\"}} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <img src=\"logo.png\" alt=\"Logo\" width=\"100px\" />\r\n              {\"  \"}<p><b>Issue Tracker</b>{\" \"}</p>\r\n            </h4>\r\n            <p className=\"flow-text grey-text text-darken-3\">\r\n              This is an issue tracking app created with the MERN stack\r\n            </p>\r\n            <br />\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/register\"\r\n                style={{\r\n                  backgroundColor: \"lime\",\r\n                  width: \"150px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\",\r\n                  marginTop: \"1rem\"\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-light hoverable green accent-5\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/login\"\r\n                style={{\r\n                  backgroundColor: \"lime\",\r\n                  width: \"150px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\",\r\n                  marginTop: \"1rem\"\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-light hoverable lightgreen accent-5\"\r\n              >\r\n                Log In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\" style={{ marginTop: \"10rem\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i> Back to home </i>\r\n            </Link>\r\n            <p>{\"   \"}</p>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Register</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                style={{margin:\"10px\", padding: \"5px\", borderRadius: \"3px\"}}\r\n                placeholder=\"Your Name\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                  error={errors.name}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.name\r\n                  })}\r\n                />\r\n                \r\n                <span className=\"red-text\">{errors.name}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n              <label htmlFor=\"email\"></label>\r\n                <input\r\n                  style={{margin:\"10px\", padding: \"5px\", borderRadius: \"3px\"}}\r\n                  placeholder=\"Email\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                \r\n                <span className=\"red-text\">{errors.email}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n              <label htmlFor=\"password\"></label>\r\n                <input\r\n                  style={{margin:\"10px\", padding: \"5px\", borderRadius: \"3px\"}}\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password\r\n                  })}\r\n                />\r\n                \r\n                <span className=\"red-text\">{errors.password}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n              <label htmlFor=\"password2\"></label>\r\n                <input\r\n                  style={{margin:\"10px\", padding: \"5px\", borderRadius: \"3px\"}}\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2\r\n                  })}\r\n                />\r\n                \r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                 style={{\r\n                  backgroundColor: \"lime\",\r\n                  width: \"150px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\",\r\n                  margin: \"1rem\"\r\n                }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable lightgreen accent-5\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"10rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i>Back to home</i>\r\n            </Link>\r\n            <p>{\"   \"}</p>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b> below\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  style={{margin:\"10px\", padding: \"5px\", borderRadius: \"3px\"}}\r\n                  placeholder=\"E-mail\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\"></label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  style={{margin:\"10px\", padding: \"5px\", borderRadius: \"3px\"}}\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\"></label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    backgroundColor: \"lime\",\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    margin: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable lightgreen accent-5\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class CreateIssue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeIssueTitle = this.onChangeIssueTitle.bind(this);\r\n    this.onChangeIssueDescription = this.onChangeIssueDescription.bind(this);\r\n    this.onChangeIssueType = this.onChangeIssueType.bind(this);\r\n    this.onChangeIssuePriority = this.onChangeIssuePriority.bind(this);\r\n    this.onChangeIssueStatus = this.onChangeIssueStatus.bind(this);\r\n    this.onChangeIssueCreatedby = this.onChangeIssueCreatedby.bind(this);\r\n    this.onChangeIssueUsersinvolved = this.onChangeIssueUsersinvolved.bind(\r\n      this\r\n    );\r\n    this.onChangeIssueCreatedon = this.onChangeIssueCreatedon.bind(this);\r\n    this.onChangeIssueDeadline = this.onChangeIssueDeadline.bind(this);\r\n    this.onChangeIssueComments = this.onChangeIssueComments.bind(this);\r\n    this.onChangeIssueCompleted = this.onChangeIssueCompleted.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      issue_title: \"\",\r\n      issue_description: \"\",\r\n      issue_type: \"\",\r\n      issue_priority: \"\",\r\n      issue_status: \"\",\r\n      issue_createdby: \"\",\r\n      issue_usersinvolved: \"\",\r\n      issue_createdon: \"\",\r\n      issue_deadline: \"\",\r\n      issue_comments: \"\",\r\n      issue_completed: false\r\n    };\r\n  }\r\n  onChangeIssueTitle(e) {\r\n    this.setState({\r\n      issue_title: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueDescription(e) {\r\n    this.setState({\r\n      issue_description: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueType(e) {\r\n    this.setState({\r\n      issue_type: e.target.value\r\n    });\r\n  }\r\n  onChangeIssuePriority(e) {\r\n    this.setState({\r\n      issue_priority: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueStatus(e) {\r\n    this.setState({\r\n      issue_status: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueCreatedby(e) {\r\n    this.setState({\r\n      issue_createdby: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueUsersinvolved(e) {\r\n    this.setState({\r\n      issue_usersinvolved: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueCreatedon(e) {\r\n    this.setState({\r\n      issue_createdon: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueDeadline(e) {\r\n    this.setState({\r\n      issue_deadline: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueComments(e) {\r\n    this.setState({\r\n      issue_comments: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueCompleted(e) {\r\n    this.setState({\r\n      issue_completed: false\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    console.log(`Form submitted:`);\r\n    console.log(`Issue Title: ${this.state.issue_title}`);\r\n    console.log(`Issue Description: ${this.state.issue_description}`);\r\n    console.log(`Issue Priority: ${this.state.issue}`);\r\n\r\n    const newIssue = {\r\n      issue_title: this.state.issue_title,\r\n      issue_description: this.state.issue_description,\r\n      issue_type: this.state.issue_type,\r\n      issue_priority: this.state.issue_priority,\r\n      issue_status: this.state.issue_status,\r\n      issue_createdby: this.state.issue_createdby,\r\n      issue_usersinvolved: this.state.issue_usersinvolved,\r\n      issue_createdon: this.state.issue_createdon,\r\n      issue_deadline: this.state.issue_deadline,\r\n      issue_comments: this.state.issue_comments,\r\n      issue_completed: this.state.issue_completed\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/issues/add\", newIssue)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      issue_title: \"\",\r\n      issue_description: \"\",\r\n      issue_type: \"\",\r\n      issue_priority: \"\",\r\n      issue_status: \"\",\r\n      issue_createdby: \"\",\r\n      issue_usersinvolved: \"\",\r\n      issue_createdon: \"\",\r\n      issue_deadline: \"\",\r\n      issue_comments: \"\",\r\n      issue_completed: false\r\n    });\r\n\r\n    window.alert(\"New issue added!\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 10 }}>\r\n        <h3>Create New Issue</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Title: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_title}\r\n              onChange={this.onChangeIssueTitle}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_description}\r\n              onChange={this.onChangeIssueDescription}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Type (e.g. Android app v. 2.4): </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_type}\r\n              onChange={this.onChangeIssueType}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Priority: </label> {\"   \"}\r\n            <select\r\n              value={this.state.issue_priority}\r\n              onChange={this.onChangeIssuePriority}\r\n            >\r\n              <option value=\"\"> - Pick one - </option>\r\n              <option value=\"Low\">Low (new feature, low importance)</option>\r\n              <option value=\"Medium\">Medium (moderate priority)</option>\r\n              <option value=\"High\">High (urgently needs fix)</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Status: </label> {\"   \"}\r\n            <select\r\n              value={this.state.issue_status}\r\n              onChange={this.onChangeIssueStatus}\r\n            >\r\n              <option value=\"\"> - Pick one - </option>\r\n              <option value=\"Open\">Open</option>\r\n              <option value=\"In progress\">In Progress</option>\r\n              <option value=\"Under review\">Under Review</option>\r\n              <option value=\"Final Approval\">Final Approval</option>\r\n              <option value=\"Done\">Done</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Created By: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_createdby}\r\n              onChange={this.onChangeIssueCreatedby}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Users Involved (e.g. Andriod team: Max, Emma, John): </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_usersinvolved}\r\n              onChange={this.onChangeIssueUsersinvolved}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Created on: </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              defaultValue={Date.now}\r\n              value={this.state.issue_createdon}\r\n              onChange={this.onChangeIssueCreatedon}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Deadline: </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_deadline}\r\n              onChange={this.onChangeIssueDeadline}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Comments: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_comments}\r\n              onChange={this.onChangeIssueComments}\r\n            />\r\n          </div>{\" \"}\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Create Issue\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class EditIssue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeIssueTitle = this.onChangeIssueTitle.bind(this);\r\n    this.onChangeIssueDescription = this.onChangeIssueDescription.bind(this);\r\n    this.onChangeIssueType = this.onChangeIssueType.bind(this);\r\n    this.onChangeIssuePriority = this.onChangeIssuePriority.bind(this);\r\n    this.onChangeIssueStatus = this.onChangeIssueStatus.bind(this);\r\n    this.onChangeIssueCreatedby = this.onChangeIssueCreatedby.bind(this);\r\n    this.onChangeIssueUsersinvolved = this.onChangeIssueUsersinvolved.bind(\r\n      this\r\n    );\r\n    this.onChangeIssueCreatedon = this.onChangeIssueCreatedon.bind(this);\r\n    this.onChangeIssueDeadline = this.onChangeIssueDeadline.bind(this);\r\n    this.onChangeIssueComments = this.onChangeIssueComments.bind(this);\r\n    this.onChangeIssueCompleted = this.onChangeIssueCompleted.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      issue_title: \"\",\r\n      issue_description: \"\",\r\n      issue_type: \"\",\r\n      issue_priority: \"\",\r\n      issue_status: \"\",\r\n      issue_createdby: \"\",\r\n      issue_usersinvolved: \"\",\r\n      issue_createdon: \"\",\r\n      issue_deadline: \"\",\r\n      issue_comments: \"\",\r\n      issue_completed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/issues/\" + this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          issue_title: response.data.issue_title,\r\n          issue_description: response.data.issue_description,\r\n          issue_type: response.data.issue_type,\r\n          issue_priority: response.data.issue_priority,\r\n          issue_status: response.data.issue_status,\r\n          issue_createdby: response.data.issue_createdby,\r\n          issue_usersinvolved: response.data.issue_usersinvolved,\r\n          issue_createdon: response.data.issue_createdon,\r\n          issue_deadline: response.data.issue_deadline,\r\n          issue_comments: response.data.issue_comments,\r\n          issue_completed: response.data.issue_completed\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChangeIssueTitle(e) {\r\n    this.setState({\r\n      issue_title: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueDescription(e) {\r\n    this.setState({\r\n      issue_description: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueType(e) {\r\n    this.setState({\r\n      issue_type: e.target.value\r\n    });\r\n  }\r\n  onChangeIssuePriority(e) {\r\n    this.setState({\r\n      issue_priority: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueStatus(e) {\r\n    this.setState({\r\n      issue_status: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueCreatedby(e) {\r\n    this.setState({\r\n      issue_createdby: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueUsersinvolved(e) {\r\n    this.setState({\r\n      issue_usersinvolved: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueCreatedon(e) {\r\n    this.setState({\r\n      issue_createdon: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueDeadline(e) {\r\n    this.setState({\r\n      issue_deadline: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueComments(e) {\r\n    this.setState({\r\n      issue_comments: e.target.value\r\n    });\r\n  }\r\n  onChangeIssueCompleted(e) {\r\n    this.setState({\r\n      issue_completed: !this.state.issue_completed\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const obj = {\r\n      issue_title: this.state.issue_title,\r\n      issue_description: this.state.issue_description,\r\n      issue_type: this.state.issue_type,\r\n      issue_priority: this.state.issue_priority,\r\n      issue_status: this.state.issue_status,\r\n      issue_createdby: this.state.issue_createdby,\r\n      issue_usersinvolved: this.state.issue_usersinvolved,\r\n      issue_createdon: this.state.issue_createdon,\r\n      issue_deadline: this.state.issue_deadline,\r\n      issue_comments: this.state.issue_comments,\r\n      issue_completed: this.state.issue_completed\r\n    };\r\n    console.log(obj);\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/issues/update/\" + this.props.match.params.id,\r\n        obj\r\n      )\r\n      .then(res => console.log(res.data));\r\n\r\n    // this.props.history.push(\"/\");\r\n    window.alert(\"Issue updated!\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 align=\"center\">Update Issue</h3>\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Title: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_title}\r\n              onChange={this.onChangeIssueTitle}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_description}\r\n              onChange={this.onChangeIssueDescription}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Type (e.g. Android app v. 2.4): </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_type}\r\n              onChange={this.onChangeIssueType}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Priority: </label> {\"   \"}\r\n            <select\r\n              value={this.state.issue_priority}\r\n              onChange={this.onChangeIssuePriority}\r\n            >\r\n              <option value=\"\"> - Change - </option>\r\n              <option value=\"Low\">Low (new feature, low importance)</option>\r\n              <option value=\"Medium\">Medium (moderate priority)</option>\r\n              <option value=\"High\">High (urgently needs fix)</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Status: </label> {\"   \"}\r\n            <select\r\n              value={this.state.issue_status}\r\n              onChange={this.onChangeIssueStatus}\r\n            >\r\n              {\" \"}\r\n              <option value=\"\"> - Change - </option>\r\n              <option value=\"Open\">Open</option>\r\n              <option value=\"In progress\">In Progress</option>\r\n              <option value=\"Under review\">Under Review</option>\r\n              <option value=\"Final Approval\">Final Approval</option>\r\n              <option value=\"Done\">Done</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Created By: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_createdby}\r\n              onChange={this.onChangeIssueCreatedby}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Users Involved (e.g. Andriod team: Max, Emma, John): </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_usersinvolved}\r\n              onChange={this.onChangeIssueUsersinvolved}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Created on: </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              defaultValue={Date.now}\r\n              value={this.state.issue_createdon}\r\n              onChange={this.onChangeIssueCreatedon}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Deadline: </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_deadline}\r\n              onChange={this.onChangeIssueDeadline}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Comments: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.issue_comments}\r\n              onChange={this.onChangeIssueComments}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              id=\"completedCheckbox\"\r\n              type=\"checkbox\"\r\n              name=\"completedCheckbox\"\r\n              onChange={this.onChangeIssueCompleted}\r\n              checked={this.state.issue_completed}\r\n              value={this.state.issue_completed}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\r\n              Completed\r\n            </label>\r\n          </div>\r\n\r\n          <br />\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Issue\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Issue = props => (\r\n  <tr>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_title}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_description}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_type}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_priority}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_status}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_createdby}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_usersinvolved}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_createdon}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_deadline}\r\n    </td>\r\n    <td className={props.issue.issue_completed ? \"completed\" : \"\"}>\r\n      {props.issue.issue_comments}\r\n    </td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.issue._id}>Edit</Link>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default class IssuesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { issues: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/issues/\")\r\n      .then(response => {\r\n        this.setState({ issues: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  issueList() {\r\n      return this.state.issues.map(function (currentIssue, i) {\r\n        return <Issue issue={currentIssue} key={i} />;\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Issues list</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Type</th>\r\n              <th>Priority</th>\r\n              <th>Status</th>\r\n              <th>Created By</th>\r\n              <th>Users Involved</th>\r\n              <th>Created On</th>\r\n              <th>Deadline</th>\r\n              <th>Completed</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.issueList()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport CreateIssue from \"../issues/new\";\r\nimport EditIssue from \"../issues/edit\";\r\nimport IssuesList from \"../issues/list\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n\r\n        <Router>\r\n        <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to=\"/\" className=\"navbar-brand\">Issue Tracker</Link>\r\n            \r\n            <div className=\"collpase navbar-collapse\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">Issues</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/create\" className=\"nav-link\">Create Issue</Link>\r\n                </li>\r\n                <li>\r\n            </li>\r\n\r\n              </ul>\r\n              <button\r\n              style={{\r\n\r\n                borderRadius: \"3px\",\r\n                marginTop: \"0\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n            >\r\n              Hi, {user.name.split(\" \")[0]}! Logout here\r\n            </button>\r\n            </div>\r\n          </nav>\r\n          <br />\r\n          <Route path=\"/\" exact component={IssuesList} />\r\n          <Route path=\"/edit/:id\" component={EditIssue} />\r\n          <Route path=\"/create\" component={CreateIssue} />\r\n        </div>\r\n      \r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            \r\n          </div>\r\n          </div>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  \n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    \n    // Logout user\n    store.dispatch(logoutUser());    \n    \n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}